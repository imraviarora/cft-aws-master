AWSTemplateFormatVersion: '2010-09-09'
Description: Installing posgres using helper scripts in Ubuntu 22.04 LTS

Parameters:
  EnvName:
    Description: Select the environment
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
  ServiceName:
    Default: postgres-hf1-replica
    Description: Write Service Name
    Type: String
  VPCID:
    Default: vpc-0a5304a0XXXXXXXX
    Description: VPC id for creating security group
    Type: String
  SubnetID:
    Default: subnet-03f1f0ddXXXXXXXX
    Description: Private subnet id for vm
    Type: String
  KeyName:
    Description: Key name to SSH VM
    Type: AWS::EC2::KeyPair::KeyName
  DiskSize:
    Default: "400"
    Description: Enter disk size in GB
    Type: String
  JumpBoxSGID:
    Default: sg-01bdfc65c1c3d4694
    Description: Jump server security group id to open port 22 for it
    Type: String
  JavaJettySGID:
    Default: sg-0d06a5421849036f5
    Description: Java jetty security group id to open port 5432
    Type: String
  MetabaseSGID:
    Default: sg-02ecfe7388ff80e61
    Description: Metabase security group id to open port 5432
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Environment Configuration"          
        Parameters:
          - EnvName
          - VPCID
          - SubnetID
      - Label:
          default: "VM Configuration"    
        Parameters:
          - KeyName
          - ServiceName
          - DiskSize
          - JumpBoxSGID
          - JavaJettySGID
          - MetabaseSGID

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: '1'
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: "S3"
          roleName: "ec2-generic"
      AWS::CloudFormation::Init:
        configSets:
          full_install:
          - install_and_enable_postgres
          - configure_postgres
        install_and_enable_postgres:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000644'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServerInstance '
                  - '         --configsets InstallAndRun '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
              mode: '000644'
              owner: root
              group: root
            /lib/systemd/system/cfn-hup.service:
              content:
                Fn::Join:
                - ''
                - - "[Unit]\n"
                  - "Description=cfn-hup daemon\n\n"
                  - "[Service]\n"
                  - 'Type=simple

                    '
                  - 'ExecStart=/usr/local/bin/cfn-hup

                    '
                  - "Restart=always\n\n"
                  - "[Install]\n"
                  - WantedBy=multi-user.target
            /home/ubuntu/postgres_data_restore.sh:
              mode: '000775'
              owner: ubuntu
              group: ubuntu
              source: "https://hf-devops.s3.ap-south-1.amazonaws.com/ps/configs/postgres/postgres_data_restore.sh"
              authentication: "S3AccessCreds"
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
          commands:
            enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            start_cfn_hup:
              command: systemctl start cfn-hup.service
            SetIstTimeZone:
              command: timedatectl set-timezone Asia/Kolkata
            SetServerHardeningProperties:
              command: !Join 
                - ''
                - - echo 'fs.file-max = 500000' >> /etc/sysctl.conf; 
                  - ''
                  - echo '*	soft	nproc	65535' >> /etc/security/limits.conf;
                  - ''
                  - echo '*	hard	nproc	65535' >> /etc/security/limits.conf;
                  - ''
                  - echo '*	soft	nofile	500000' >> /etc/security/limits.conf;
                  - ''
                  - echo '*	hard	nofile	500000' >> /etc/security/limits.conf
            SetHostname:
              command: !Join 
                - ''
                - - hostnamectl set-hostname 
                  - ' '
                  - !Ref EnvName
                  - '-'
                  - !Ref ServiceName
            InstallPostgres:
              command: 'sudo apt -y install postgresql-12 postgresql-client-12'
            StartPostgresService:
              command: "systemctl restart postgresql; systemctl enable postgresql"
            SetCustomAlias:
              command: echo "alias switchPostgres='sudo -i -u postgres'" >> /home/ubuntu/.bashrc
            RemovingExtras:
              command: "apt autoremove -y"
        configure_postgres:
          commands:
            1ChangePostgresConfigs:
              command: "sed -i 's/max_connections = 100/max_connections = 2000/' postgresql.conf; sed -i 's/#effective_cache_size = 4GB/effective_cache_size = 8GB/' postgresql.conf"
              cwd: "/etc/postgresql/12/main"
              test: "ls /etc/postgresql/12/main"
            2ChangePostgresConfigs:
              command: sed -i 's/Etc\/UTC/Asia\/Kolkata/g' postgresql.conf
              cwd: "/etc/postgresql/12/main"
              test: "ls /etc/postgresql/12/main"
            3ChangePostgresConfigs:
              command: sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '$(hostname -I | xargs),127.0.0.1'/" postgresql.conf
              cwd: "/etc/postgresql/12/main"
              test: "ls /etc/postgresql/12/main"
            4RestartPostgresService:
              command: "systemctl restart postgresql"
    Properties:
      ImageId: "ami-08795883c7b4b7140"
      InstanceType: m6g.2xlarge
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: !Ref DiskSize
            DeleteOnTermination: true
            VolumeType: "gp3"
      KeyName: !Ref KeyName
      IamInstanceProfile: 
        Ref: MyInstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          SubnetId:
            Ref: SubnetID
          GroupSet:
            - !Ref DatabaseSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg

              '
            - 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list

              '
            - 'sudo apt update -y; sudo apt upgrade -y

              '
            - 'sudo apt-get -y install python3-pip

              '
            - 'mkdir -p /opt/aws/

              '
            - 'sudo pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz

              '
            - 'sudo ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup

              '
            - "/usr/local/bin/cfn-init -v "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource EC2Instance "
            - "         --configsets full_install "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "/usr/local/bin/cfn-signal -e $? "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource EC2Instance "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
      Tags:
        - Key: Name
          Value: !Join [ '-', [!Ref EnvName, !Ref ServiceName] ]
        - Key: Stack
          Value: java
        - Key: Service
          Value: postgres
        - Key: Component
          Value: database
        - Key: Env
          Value:
            Ref: EnvName
  
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database Security Group
      VpcId:
        Ref: VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: 
            Ref: JumpBoxSGID 
          Description: "jump box ssh"
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          SourceSecurityGroupId:
            Ref: JavaJettySGID 
          Description: "jetty access"
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          SourceSecurityGroupId:
            Ref: MetabaseSGID 
          Description: "Metabase access"
      Tags:
        - Key: Name
          Value: !Join [ '-', [!Ref EnvName, !Ref ServiceName, 'sg'] ]
        - Key: Stack
          Value: java
        - Key: Service
          Value: postgres
        - Key: Component
          Value: database
        - Key: Env
          Value:
            Ref: EnvName

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - "ec2-generic"