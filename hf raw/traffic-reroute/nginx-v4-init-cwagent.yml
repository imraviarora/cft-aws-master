AWSTemplateFormatVersion: '2010-09-09'
Description: Installing nginx using helper scripts in Ubuntu 22.04 LTS

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: '1'
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: "S3"
          roleName: "ec2-generic"
      AWS::CloudFormation::Init:
        configSets:
          full_install:
          - install_and_enable_cfn_hup
        install_and_enable_cfn_hup:
          packages:
            apt:
              nginx: []
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000644'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServerInstance '
                  - '         --configsets InstallAndRun '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
              mode: '000644'
              owner: root
              group: root
            /lib/systemd/system/cfn-hup.service:
              content:
                Fn::Join:
                - ''
                - - "[Unit]\n"
                  - "Description=cfn-hup daemon\n\n"
                  - "[Service]\n"
                  - 'Type=simple

                    '
                  - 'ExecStart=/usr/local/bin/cfn-hup

                    '
                  - "Restart=always\n\n"
                  - "[Install]\n"
                  - WantedBy=multi-user.target
            /tmp/amazon-cloudwatch-agent.json:
              mode: '000644'
              owner: root
              group: root
              source: "https://hf-devops.s3.ap-south-1.amazonaws.com/ps/configs/nginx/amazon-cloudwatch-agent-v2.json"
              authentication: "S3AccessCreds"
            /etc/nginx/sites-available/default:
              mode: '000644'
              owner: root
              group: root
              source: "https://hf-devops.s3.ap-south-1.amazonaws.com/ps/configs/nginx/traffic-reroute-nginx-config"
              authentication: "S3AccessCreds"
          services:
            sysvinit:
              nginx:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/nginx/nginx.conf"
                  - "/etc/nginx/sites-available/default"
                sources:
                  - "/var/www/html"
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
            03SetIstTimeZone:
              command: timedatectl set-timezone Asia/Kolkata
            03ChangeNginxHTMLFile:
              command: "echo 'This Nginx is Created by CFT' > /var/www/html/index.nginx-debian.html"
            04SetServerHardeningProperties:
              command: "echo 'fs.file-max = 500000' >> /etc/sysctl.conf; echo '*	soft	nproc	65535' >> /etc/security/limits.conf; echo '*	hard	nproc	65535' >> /etc/security/limits.conf; echo '*	soft	nofile	500000' >> /etc/security/limits.conf; echo '*	hard	nofile	500000' >> /etc/security/limits.conf"
            05SetHostname:
              command: hostnamectl set-hostname cft-nginx
            06ConfigureCWAgent:
              command: "wget https://s3.ap-south-1.amazonaws.com/amazoncloudwatch-agent-ap-south-1/ubuntu/arm64/latest/amazon-cloudwatch-agent.deb; dpkg -i -E ./amazon-cloudwatch-agent.deb; /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s; chmod -R 777 /var/log/nginx; mv /tmp/amazon-cloudwatch-agent.json /opt/aws/amazon-cloudwatch-agent/etc; chown cwagent:cwagent /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json"
              cwd: "/tmp"
            07RemovingExtras:
              command: "apt remove python3-pip -y; rm /tmp/amazon-cloudwatch-agent.deb"
    Properties:
      ImageId: "ami-08795883c7b4b7140"
      InstanceType: t4g.small 
      KeyName: devops-access
      IamInstanceProfile: 
        Ref: MyInstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: "subnet-1c4da675"
          GroupSet:
            - "sg-2cd92a45"
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'sudo apt-get update -y

              '
            - 'sudo apt-get -y install python3-pip

              '
            - 'mkdir -p /opt/aws/

              '
            - 'sudo pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz

              '
            - 'sudo ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup

              '
            - "/usr/local/bin/cfn-init -v "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource EC2Instance "
            - "         --configsets full_install "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "/usr/local/bin/cfn-signal -e $? "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource EC2Instance "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
      Tags:
        - Key: Name
          Value: "test-cp"

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - "ec2-generic"

Outputs:
  NginxURL:
    Description: Application URL to access
    Value: !Sub 'http://${EC2Instance.PublicIp}:8080/' 